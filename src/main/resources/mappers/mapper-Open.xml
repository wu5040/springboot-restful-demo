<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.Mappers.OpenMapper">

    <!--id对应接口中的方法，名字要一样，parameterType是方法的参数类型，
    resultType是查询返回的类型，需要注意的是，这里的SQL语句后面不能加分号，变量不能加引号-->

    <select id="getByGh" parameterType="string" resultType="java.util.Map">
        select xq,Open.kh,km,sksj from Open,Course_ where Open.kh=Course_.kh and gh=#{gh}
    </select>

    <select id="getByKhGhXq" parameterType="string" resultType="Open">
        select * from Open where kh = #{kh} and gh=#{gh} and xq=#{xq}
    </select>

    <select id="getAll" resultType="java.util.Map">
        select OC.kh,OC.km,OC.gh,U.name,OC.sksj,OC.xq,OC.max from
        (select Open.kh,C.km,Open.gh,Open.sksj,Open.xq,Open.max
        from Open
            left join
        (select kh,km from Course_) as C
            on Open.kh=C.kh) as OC
        left join
        (select userId,name from user) as U
        on OC.gh=U.userId
    </select>

    <select id="getDetail" parameterType="string" resultType="java.util.Map">
        SELECT xh,name,pscj,kscj,zpcj
        FROM Elective,user
        WHERE kh=#{kh} and xq=#{xq} and gh=#{gh} and xh=userId
    </select>


    <insert id="insert">
        insert into Open(xq, kh, gh, sksj, max) values(#{xq},#{kh},#{gh},#{sksj},#{max})
    </insert>

    <update id="update">
        update Open
        set sksj=#{sksj},max=#{max}
        where xq=#{xq} and kh=#{kh} and gh=#{gh}
    </update>

    <select id="search" parameterType="string" resultType="java.util.Map">
        select OCU.kh,OCU.km,OCU.gh,tname,OCU.sksj,OCU.xq,OCU.max,count(E.xh) as Cur from
            (select OC.kh,OC.km,OC.gh,U.name as tname,OC.sksj,OC.xq,OC.max from
                (select Open.kh,Course_.km,Open.gh,Open.sksj,Open.xq,Open.max,Course_.xf,Course_.xs
                from Open left join Course_
                on Open.kh=Course_.kh
            where Course_.km LIKE #{inpuStr} or Course_.kh LIKE #{inpuStr}) as OC
                left join
            (select userId,name from user) as U
                on OC.gh=U.userId) as OCU
        left join
            (select kh,gh,xq,xh from Elective) as E
        on OCU.kh=E.kh and OCU.gh=E.gh and OCU.xq=E.xq
            group by OCU.kh,OCU.gh,OCU.xq
    </select>

</mapper>
